name: CI

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Set up C
      run: sudo apt-get install gcc-mingw-w64 clang gcc gcc-multilib
    - name: Install nim
      run: |
         curl https://nim-lang.org/choosenim/init.sh -sSf | sh -s -- -y
         ~/.nimble/bin/choosenim -y stable --firstInstall
    - name: Build
      run: PATH=~/.nimble/bin:$PATH nimble cross
    - name: Dir
      run: dir
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Windows Build
      id: upload-win-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/win-main.exe
        asset_name: win-main.exe
        asset_content_type: application/vnd.microsoft.portable-executable

  mac_build:
    runs-on: macos-12
    steps:
    - name: Install nim
      run: |
         curl https://nim-lang.org/choosenim/init.sh -sSf | sh -s -- -y
         ~/.nimble/bin/choosenim -y stable --firstInstall
    - name: Build
      run: PATH=~/.nimble/bin:$PATH nimble cross
    - name: Dir
      run: dir
 
    - name: Upload OSX x86_64 Build
      id: upload-osx-x86_64-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ build.steps.create_release.outputs.upload_url }}
        asset_path: ./bin/mac-x86_64-main
        asset_name: mac-x86_64-main
    - name: Upload OSX Arm64 Build
      id: upload-osx-arm64-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ build.steps.create_release.outputs.upload_url }}
        asset_path: ./bin/mac-arm64-main
        asset_name: mac-arm64-main
    - name: Upload OSX M1 Build
      id: upload-osx-m1-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ build.steps.create_release.outputs.upload_url }}
        asset_path: ./bin/mac-m1-main
        asset_name: mac-m1-main
